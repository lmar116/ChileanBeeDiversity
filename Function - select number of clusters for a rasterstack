#kmean clustering on a rasterstack
##Serves to calculate indices for the choice of the number of clusters based on a rasterstack
raster.kmeans.test = function(x,
                              distance,
                              geo = T,
                              geo.weight = 1,
                              index) {
  if (class(x)[1] == "RasterStack") {
    stk = x
  } else{
    stl = list.files(
      x,
      full.names = TRUE,
      include.dirs = FALSE,
      pattern = "tif"
    )
    stk = raster::stack(stl)
  }
  
  
  oDF = raster::as.data.frame(stk)
  oo = raster::xyFromCell(stk, 1:(stk@ncols * stk@nrows))
  if (geo == T) {
    oDF$x = oo[, 1]
    oDF$y = oo[, 2]
  }
  
  for (idx in 1:length(oDF)) {
    oDF[, idx] = normalize(oDF[, idx])
  }
  
  if (geo == T) {
    oDF$x = oDF$x * geo.weight
    oDF$y = oDF$y * geo.weight
  }
  
  oDFk = oDF
  oDFk$idx = 1:length(oDFk[, 1])
  oDFi = subset(oDFk, complete.cases(oDFk))
  oDF = subset(oDF, complete.cases(oDF))
  
  Test = NbClust::NbClust(
    oDF,
    distance = distance,
    min.nc = 5, #starting point of five clusters (where 80% of variance was explained) 
    max.nc = 10,
    method = "kmeans",
    index = index
  )
  Test
}
